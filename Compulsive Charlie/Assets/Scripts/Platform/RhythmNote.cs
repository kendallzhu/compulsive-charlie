using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// script for managing rhythm notes generated by ActivityPlatforms
// (current general idea is they are like forward-floating ceilings player must jump into)
public class RhythmNote : MonoBehaviour {
    public ActivityPlatform ap;
    // todo: have some notes carry thoughts, which are activated on hit
    public RunManager runManager;
    public bool isThought;

    // rigidbody
    Rigidbody2D rb2d;

    void Awake()
    {
        // get reference to runManager
        runManager = Object.FindObjectOfType<RunManager>();
    }

    public void Initialize(ActivityPlatform _ap)
    {
        ap = _ap;
        // make fast if lots of negative emotion
        // TODO: add more nuance/ better design
        rb2d = gameObject.GetComponent<Rigidbody2D>();
        rb2d.velocity = new Vector2(5, 0);
        int e = runManager.runState.emotions.GetTotal();
        if (e < -10)
        {
            rb2d.velocity = new Vector2(10, 0);
        }
    }
	
	// Auto-destroy when past platform end
	void Update () {
		if (transform.position.x > ap.x + ap.length)
        {
            Destroy(gameObject);
        }
    }

    // destroy and trigger activity bonus effect when hit by player
    void OnCollisionEnter2D(Collision2D col)
    {
        if (col.gameObject.name == "Charlie")
        {
            // TODO: add more specifics, i.e. must hit from underneath
            ap.activity.RhythmEffect(runManager.runState);
            Destroy(gameObject);
            // allow Charlie to stop forward momentum when hitting a note
            col.gameObject.GetComponent<Rigidbody2D>().velocity = new Vector2(0, -2);
        }
    }
}
